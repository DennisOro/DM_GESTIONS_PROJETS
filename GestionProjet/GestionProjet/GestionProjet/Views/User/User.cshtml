@model GestionProjet.Models.User

@{
    ViewBag.Title = "Employé";
}

<h2>User</h2>

@using (Html.BeginForm("User", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="@(Model.NewUser == true ? "display:block" : "display:none")">
            @Html.LabelFor(model => model.matricule, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.matricule, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.matricule, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HourlyRate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HourlyRate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HourlyRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Role,
                    Model.RolesList,
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telephone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telephone, new { htmlAttributes = new { @class = "form-control", pattern = @"^(\+\d{1,2}\s)?\(?\d{3}\)?[\s.-]\d{3}[\s.-]\d{4}$" } })
                @Html.ValidationMessageFor(model => model.telephone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codePostal, htmlAttributes: new { @class = "control-label col-md-2" })
            
            <div class="col-md-10">
                <input type="text" onchange="validCodePostal(this.value)" class="text-danger" />
                
            </div>
        </div>



        @if (Model.NewUser)
        {
            <div>
                <h2>Créer l'authenification d'employé</h2>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Login.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Login.UserID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Login.UserID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Login.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Login.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Login.Password, "", new { @class = "text-danger" })
                </div>
            </div>
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    @Html.HiddenFor(model => model.NewUser)

}



<script>
    function validCodePostal(obj) {
        if (obj == null) return;
        $.ajax({
            url: "/User/ValidCodePostal?codepostal=" + obj,
            type: 'GET',
            //dataType: 'html',
            success: function (result) {
                //var listObjects = JSON.parse(result);
                //alert("I'm in!");
                //$("#dvTasksList").html(result);
                if (result=='f')
                    alert("Code postale invalide");
                else
                    alert("Code postale valide");
                //   location.reload();
            },
            error: function (xhr, status, error) {
                alert("Code postale invalide");
            }
        });
    }



</script>