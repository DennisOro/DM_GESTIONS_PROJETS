
@model GestionProjet.Models.TaskAssign

@{
    ViewBag.Title = "Assignation de tâches";
}

@* Page pour assigner une tâche à un utilisateur *@

@using (Html.BeginForm("TaskAssign", "TaskAssign", FormMethod.Post))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Assignation de tâches</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdTask)
        @Html.HiddenFor(model => model.idStatus)
        @Html.HiddenFor(model => model.NewTask)

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" disabled>
                @Html.DisplayFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="other" class="control-label col-md-2">Nombre d'heures Travaillées</label>
            <div class="col-md-10" disabled>
                @Html.DisplayFor(model => model.nbHeuresTravaille, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nbHeuresTravaille, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="other" class="control-label col-md-2">Nombre d'heures estimé</label>
            <div class="col-md-10" disabled>
                @Html.DisplayFor(model => model.nbHeuresEstime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nbHeuresEstime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idProjet, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.idProjet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idProjet, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr>


        <div class="form-group">
            <label for="other" class = "control-label col-md-2">Employé</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.utilisateur,
                        Model.EmployeesList,
                        new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.utilisateur, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

}


<div class=jumbotron>
    <p>Utilisateurs associés</p>
    <div id="scrolltable">
        <table class="table">
            <tr>
                <th>
                    Matricule
                </th>
                <th>
                    Employé
                </th>

                <th></th>
            </tr>

            @foreach (var item in Model.TaskUserList)
            {
            <tr>
                <td>
                    @item.Matricule
                </td>
                <td>
                    @item.Tnom
                </td>
                <td>
                    <input type="submit" value="Supprimer" id="deleteEmploye" onclick="deleteTaskUser(@item.IdTask,'@item.Matricule')" />
                </td>

            </tr>
            }
        </table>
    </div>

</div>

<div>
    @Html.ActionLink("Index", "Home")
</div>

<script type="text/javascript">
    function deleteTaskUser(idTask, matricule) {
        $.ajax({
            url: "/Home/deleteTaskUser",
            type: 'POST',
            data: { idTask: idTask, matricule: matricule },
            success: function (result) {
                alert(result);
                location.reload();
            },
            error: function (xhr, status, error) {
                alert(status + error);
            }
        });
    }
</script>



